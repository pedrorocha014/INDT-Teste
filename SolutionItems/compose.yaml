version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: indt_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: indt_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      bubble:

  zookeeper:
    image: docker.io/zookeeper:3.5
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr,conf,ruok
    networks:
      bubble:
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  kafka:
    image: docker.io/confluentinc/cp-server:7.3.3
    hostname: kafka
    container_name: kafka
    restart: always
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      KAFKA_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      KAFKA_STATUS_STORAGE_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      bubble:
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  criador-topicos:
    image: docker.io/confluentinc/cp-kafka:7.3.2
    container_name: criador-topicos
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    command:
      - bash
      - -c
      - |
        echo -e 'Aguardando Kafka subir com sucesso...'
        sleep 10
        kafka-topics --bootstrap-server kafka:29092 --list

        kafka-topics --create --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic proposta-contratada
        kafka-topics --create --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic proposta-contratada.dlq
        
        echo -e 'Criados os seguintes topicos com sucesso:'
        kafka-topics --bootstrap-server kafka:29092 --list
    networks:
      bubble:
  
  akhq:
    container_name: akhq
    image: docker.io/tchiotludo/akhq
    networks:
      bubble:
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"


networks:
  bubble:
    driver: bridge